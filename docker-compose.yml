services:
  # Database services
  mysql:
    image: mysql:8.4.5
    container_name: mlops_mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: pcsagri
      MYSQL_USER: khalil
      MYSQL_PASSWORD: khalil123
      MYSQL_ROOT_HOST: '%'  # Allow root access from any host
    volumes:
      - ./mysqldata:/var/lib/mysql
      - ./mysql-init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - mlops-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 5s
      timeout: 5s
      retries: 5
    command:
      - --skip-log-bin
      

  # Database management UI
  adminer:
    image: adminer:latest
    restart: always
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    depends_on:
      - mysql
    networks:
      - mlops-network

  # Message broker
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: "-proto_dist inet_tcp"
    networks:
      - mlops-network

  # Cache and result backend
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - mlops-network


  # Monitoring stack
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    depends_on:
      - pushgateway
    networks:
      - mlops-network

  loki:
    image: grafana/loki:latest
    ports:
      - "3101:3100"
    volumes:
      - ./monitoring/loki-config.yaml:/etc/loki/local-config.yaml
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - mlops-network

  tempo:
    image: grafana/tempo:latest
    ports:
      - "3200:3200"
    volumes:
      - ./monitoring/tempo-config.yaml:/etc/tempo/config.yaml
      - tempo_data:/var/tempo
    command: -config.file=/etc/tempo/config.yaml
    networks:
      - mlops-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_SECURITY_ALLOW_EMBEDDING=true
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
      - loki
      - tempo
    networks:
      - mlops-network

  pushgateway:
    image: prom/pushgateway:latest
    container_name: pushgateway
    restart: unless-stopped
    ports:
      - "9091:9091"
    networks:
      - mlops-network
    volumes:
      - pushgateway_data:/pushgateway

volumes:
  mysql_data:
  prometheus_data:
  loki_data:
  tempo_data:
  grafana_data:
  pushgateway_data:
    driver: local

networks:
  mlops-network: 
    driver: bridge