services:
  # Database services
  mysql:
    image: mysql:8.4.5
    container_name: mlops_mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: pcsagri
      MYSQL_USER: khalil
      MYSQL_PASSWORD: khalil123
      MYSQL_ROOT_HOST: '%'  # Allow root access from any host
    volumes:
      - ./mysqldata:/var/lib/mysql
      - ./mysql-init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - mlops-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 5s
      timeout: 5s
      retries: 5
    command:
      - --skip-log-bin
      

  # Database management UI
  adminer:
    image: adminer:latest
    restart: always
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    depends_on:
      - mysql
    networks:
      - mlops-network

  # Message broker
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: "-proto_dist inet_tcp"
    networks:
      - mlops-network

  # Cache and result backend
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - mlops-network

volumes:
  mysql_data:

networks:
  mlops-network: 
    driver: bridge